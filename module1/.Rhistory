theme(axis.text.x = element_text(angle = 90, hjust = 1))
# plotting
ques_2 <- ny_state %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
# plot
ggplot(ques_2, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Answer Question 3 here
#options(scipen = 5) # turn off scientific notation
ques_3 <- inc %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry", x = "Industy", y = "Revenue per Employee") +
coord_flip()
# Answer Question 3 here
#options(scipen = 5) # turn off scientific notation
ques_3 <- inc %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry", x = "Industy", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# Answer Question 3 here
#options(scipen = 5) # turn off scientific notation
ques_3 <- inc %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# using the whole data set to compare NY with
summary(inc)
#
ggplot(inc, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#
ques_2.2 <- inc %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
ggplot(ques_2.2, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#
ques_2.2 <- inc %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
ggplot(ques_2.2, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in the Country', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# comparison plot of the country
ques_2.2 <- inc %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
ggplot(ques_2.2, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in the Country', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
coord_flip()
# comparison plot of the country
ques_2.2 <- inc %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
ggplot(ques_2.2, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in the Country', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Answer Question 3 here
#options(scipen = 5) # turn off scientific notation
ques_3 <- inc %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# Answer Question 3 here
# showing the country as a whole
ques_3 <- inc %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# showing NY state only
ques_3.2 <- ny_state %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3.2, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
inc <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module1/Data/inc5000_data.csv", header= TRUE)
head(inc)
summary(inc)
# Loading libraries
library(tidyverse)
library(ggplot2)
# Insert your code here, create more chunks as necessary
# Offers an overview of what the data looks like, has 5,001 rows with 8 columns, along with the column names
glimpse(inc)
# Answer Question 1 here
# sort by state
ques_1 <- inc %>%
group_by(State) %>%
count(State) %>%
arrange(desc(n)) %>%
as_tibble(ques_1)
# plot
ggplot(ques_1, aes(x = reorder(State, n), y = n)) +
geom_bar(stat = "identity") +
theme_classic() +
coord_flip() +
xlab("State") +
ylab("Count") +
ggtitle("Number of Companies by State")
# Answer Question 2 here
# Based on question 1 we know NY is the third state with most companies and we filter it out
ny_state <- filter(inc, State == 'NY')
summary(ny_state)
# using the whole data set to compare NY with
summary(inc)
# plotting NY state
ques_2 <- ny_state %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
# plot showing mean and median by industry
ggplot(ques_2, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# comparison plot of the country
ques_2.2 <- inc %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
ggplot(ques_2.2, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in the Country', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# Answer Question 3 here
# showing the country as a whole
ques_3 <- inc %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# showing NY state only
ques_3.2 <- ny_state %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3.2, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
inc <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module1/Data/inc5000_data.csv", header= TRUE)
head(inc)
summary(inc)
# Loading libraries
library(tidyverse)
library(ggplot2)
library(psych)
# Insert your code here, create more chunks as necessary
# Offers an overview of what the data looks like, has 5,001 rows with 8 columns, along with the column names
glimpse(inc)
describe(inc)
# Answer Question 1 here
# sort by state
ques_1 <- inc %>%
group_by(State) %>%
count(State) %>%
arrange(desc(n)) %>%
as_tibble(ques_1)
# plot
ggplot(ques_1, aes(x = reorder(State, n), y = n)) +
geom_bar(stat = "identity") +
theme_classic() +
coord_flip() +
xlab("State") +
ylab("Count") +
ggtitle("Number of Companies by State")
# Answer Question 2 here
# Based on question 1 we know NY is the third state with most companies and we filter it out
ny_state <- filter(inc, State == 'NY')
summary(ny_state)
# using the whole data set to compare NY with
summary(inc)
# plotting NY state
ques_2a <- ny_state %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
# plot showing mean and median by industry
ggplot(ques_2a, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# comparison plot of the country
ques_2b <- inc %>%
filter(complete.cases(.)) %>% # want complete cases only
group_by(Industry)
ggplot(ques_2b, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in the Country', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# showing NY state only
ques_3a <- ny_state %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3a, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry in NY", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# Answer Question 3 here
# showing the country as a whole
ques_3b <- inc %>%
group_by(Industry) %>%
summarize(Total_Rev = sum(Revenue), Total_Emp = sum(Employees), Rev_per_Emp = Total_Rev/Total_Emp) %>%
arrange(desc(Rev_per_Emp)) %>%
na.omit()
ggplot(ques_3b, aes(x = reorder(Industry, Rev_per_Emp), y = Rev_per_Emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry in the Country", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
summary(ques_2a)
inc <- read.csv("https://raw.githubusercontent.com/charleyferrari/CUNY_DATA_608/master/module1/Data/inc5000_data.csv", header= TRUE)
head(inc)
summary(inc)
# Loading libraries
library(tidyverse)
library(ggplot2)
library(psych)
# Insert your code here, create more chunks as necessary
# Offers an overview of what the data looks like, has 5,001 rows with 8 columns, along with the column names
glimpse(inc)
# looking deeper into the data set with the describe function
describe(inc)
# Answer Question 1 here
# sort by statem in descending order
ques_1 <- inc %>%
group_by(State) %>%
count(State) %>%
arrange(desc(n)) %>%
as_tibble(ques_1)
# plot bar chart
ggplot(ques_1, aes(x = reorder(State, n), y = n)) +
geom_bar(stat = "identity") +
theme_classic() +
coord_flip() +
xlab("State") +
ylab("Frequency") +
ggtitle("Number of Companies by State")
# Answer Question 2 here
# Based on question 1 we know NY is the third state with most companies so we filter it out
ny_state <- filter(inc, State == 'NY')
summary(ny_state)
# using the whole data set to compare NY with
summary(inc)
# plotting NY state
ques_2a <- ny_state %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry)
# boxplot showing NY by industry
ggplot(ques_2a, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# comparison plot of the country
ques_2b <- inc %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry)
ggplot(ques_2b, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in the Country', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# showing NY state only
ques_3a <- ny_state %>%
group_by(Industry) %>%
summarize(total_rev = sum(Revenue), total_emp = sum(Employees), rev_per_emp = total_rev/total_emp) %>%
arrange(desc(rev_per_emp)) %>%
na.omit()
ggplot(ques_3a, aes(x = reorder(Industry, rev_per_emp), y = rev_per_emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry in NY", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# Answer Question 3 here
# showing the country as a whole
ques_3b <- inc %>%
group_by(Industry) %>%
summarize(total_rev = sum(Revenue), total_emp = sum(Employees), rev_per_emp = total_rev/total_emp) %>%
arrange(desc(rev_per_emp)) %>%
na.omit()
ggplot(ques_3b, aes(x = reorder(Industry, rev_per_emp), y = rev_per_emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry in the Country", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# plotting NY state
ques_2a <- ny_state %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry)
# boxplot showing NY by industry
ggplot(ques_2a, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(breaks = seq(0, 400, by = 25))
# plotting NY state
ques_2a <- ny_state %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry)
# boxplot showing NY by industry
ggplot(ques_2a, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_y_continuous(breaks = seq(0, 1400, by = 100))
# plotting NY state
ques_2a <- ny_state %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry)
# boxplot showing NY by industry
ggplot(ques_2a, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# plotting NY state
ques_2a <- ny_state %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry)
select(Industry, Employees)
# plotting NY state
ques_2a <- ny_state %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry) %>%
select(Industry, Employees)
# boxplot showing NY by industry
ggplot(ques_2a, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# plotting NY state
ques_2a <- ny_state %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry) %>%
select(Industry, Employees)
# boxplot showing NY by industry
ggplot(ques_2a, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in NY', x = 'Industry', y = 'Number of Employees') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# comparison plot of the country
ques_2b <- inc %>%
filter(complete.cases(.)) %>% # complete cases only
group_by(Industry) %>%
select(Industry, Employees)
ggplot(ques_2b, mapping = aes(x = Industry, y = Employees)) +
geom_boxplot() +
theme_classic() +
labs(title = 'Distribution of Employment by Industry in the Country', x = 'Industry', y = 'Count') +
coord_cartesian(ylim = c(0, 1500)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# turning off scientific notiation
options(scipen = 999)
# showing NY state only
ques_3a <- ny_state %>%
group_by(Industry) %>%
summarize(total_rev = sum(Revenue), total_emp = sum(Employees), rev_per_emp = total_rev/total_emp) %>%
arrange(desc(rev_per_emp)) %>%
na.omit()
ggplot(ques_3a, aes(x = reorder(Industry, rev_per_emp), y = rev_per_emp)) +
geom_bar(stat = "identity") +
labs(title = "Revenue per Employee by Industry in NY", x = "Industry", y = "Revenue per Employee") +
theme_classic() +
coord_flip()
# Answer Question 1 here
# sort by statem in descending order
ques_1 <- inc %>%
group_by(State) %>%
count(State) %>%
arrange(desc(n)) %>%
as_tibble(ques_1)
# plot bar chart
ggplot(ques_1, aes(x = reorder(State, n), y = n)) +
geom_bar(stat = "identity") +
theme_classic() +
coord_flip() +
xlab("State") +
ylab("Number of Companies") +
ggtitle("Number of Companies by State") +
geom_text(aes(label=companies_freq), vjust=0.6, hjust=1.2, size=3, color="black")
# Answer Question 1 here
# sort by statem in descending order
ques_1 <- inc %>%
group_by(State) %>%
count(State) %>%
arrange(desc(n)) %>%
as_tibble(ques_1)
# plot bar chart
ggplot(ques_1, aes(x = reorder(State, n), y = n)) +
geom_bar(stat = "identity") +
theme_classic() +
coord_flip() +
xlab("State") +
ylab("Number of Companies") +
ggtitle("Number of Companies by State") +
geom_text(aes(label=n), vjust=0.6, hjust=1.2, size=3, color="white")
# Answer Question 1 here
# sort by statem in descending order
ques_1 <- inc %>%
group_by(State) %>%
count(State) %>%
arrange(desc(n)) %>%
as_tibble(ques_1)
# plot bar chart
ggplot(ques_1, aes(x = reorder(State, n), y = n)) +
geom_bar(stat = "identity") +
theme_classic() +
coord_flip() +
xlab("State") +
ylab("Number of Companies") +
ggtitle("Number of Companies by State") +
geom_text(aes(label = n), vjust = 0.6, hjust = 1.2, size = 5, color="white")
# Answer Question 1 here
# sort by statem in descending order
ques_1 <- inc %>%
group_by(State) %>%
count(State) %>%
arrange(desc(n)) %>%
as_tibble(ques_1)
# plot bar chart
ggplot(ques_1, aes(x = reorder(State, n), y = n)) +
geom_bar(stat = "identity") +
theme_classic() +
coord_flip() +
xlab("State") +
ylab("Number of Companies") +
ggtitle("Number of Companies by State") +
geom_text(aes(label = n), vjust = 0.6, hjust = 1.2, size = 2, color="white")
